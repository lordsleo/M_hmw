//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace M_hmw.ConsignVehicleReport {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConsignVehicleReport.IExter")]
    public interface IExter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExter/GetVehAttestByRID", ReplyAction="http://tempuri.org/IExter/GetVehAttestByRIDResponse")]
        M_hmw.ConsignVehicleReport.GetVehAttestByRIDResponse GetVehAttestByRID(M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExter/GetVehAttestByRID", ReplyAction="http://tempuri.org/IExter/GetVehAttestByRIDResponse")]
        System.Threading.Tasks.Task<M_hmw.ConsignVehicleReport.GetVehAttestByRIDResponse> GetVehAttestByRIDAsync(M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVehAttestByRID", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVehAttestByRIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strINGATENO;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string cryptogram;
        
        public GetVehAttestByRIDRequest() {
        }
        
        public GetVehAttestByRIDRequest(string strINGATENO, string cryptogram) {
            this.strINGATENO = strINGATENO;
            this.cryptogram = cryptogram;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVehAttestByRIDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVehAttestByRIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetVehAttestByRIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Data.DataSet ds;
        
        public GetVehAttestByRIDResponse() {
        }
        
        public GetVehAttestByRIDResponse(string GetVehAttestByRIDResult, System.Data.DataSet ds) {
            this.GetVehAttestByRIDResult = GetVehAttestByRIDResult;
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExterChannel : M_hmw.ConsignVehicleReport.IExter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExterClient : System.ServiceModel.ClientBase<M_hmw.ConsignVehicleReport.IExter>, M_hmw.ConsignVehicleReport.IExter {
        
        public ExterClient() {
        }
        
        public ExterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        M_hmw.ConsignVehicleReport.GetVehAttestByRIDResponse M_hmw.ConsignVehicleReport.IExter.GetVehAttestByRID(M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest request) {
            return base.Channel.GetVehAttestByRID(request);
        }
        
        public string GetVehAttestByRID(string strINGATENO, string cryptogram, out System.Data.DataSet ds) {
            M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest inValue = new M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest();
            inValue.strINGATENO = strINGATENO;
            inValue.cryptogram = cryptogram;
            M_hmw.ConsignVehicleReport.GetVehAttestByRIDResponse retVal = ((M_hmw.ConsignVehicleReport.IExter)(this)).GetVehAttestByRID(inValue);
            ds = retVal.ds;
            return retVal.GetVehAttestByRIDResult;
        }
        
        public System.Threading.Tasks.Task<M_hmw.ConsignVehicleReport.GetVehAttestByRIDResponse> GetVehAttestByRIDAsync(M_hmw.ConsignVehicleReport.GetVehAttestByRIDRequest request) {
            return base.Channel.GetVehAttestByRIDAsync(request);
        }
    }
}
